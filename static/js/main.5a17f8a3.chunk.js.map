{"version":3,"sources":["components/Navbar/clickylogo.PNG","components/Header/nbalogo.png","components/Header/warriors.png","components/Footer/warriors.png","components/Navbar/Navbar.js","components/Header/Header.js","components/Container/Container.js","components/Clickables/Clickables.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","id","className","src","whitelogo","alt","topScore","score","Header","warriors","nbalogo","Container","children","Clickables","onClick","handleClick","aria-label","process","image","Footer","href","target","logo","App","state","data","resetData","map","item","Object","objectSpread","clicked","_this","shuffleCharacters","i","length","j","Math","floor","random","temp","correctGuess","newData","_this$state","newScore","newTopScore","setState","incorrectGuess","alert","handleClickable","guessedCorrectly","characters","newItem","this","_this2","components_Navbar_Navbar","components_Header_Header","components_Container_Container","components_Clickables_Clickables","key","components_Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a17f8a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clickylogo.c05f223e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/nbalogo.95ae9cf0.png\";","module.exports = __webpack_public_path__ + \"static/media/warriors.575b1696.png\";","module.exports = __webpack_public_path__ + \"static/media/warriors.575b1696.png\";","import React from \"react\";\nimport whitelogo from \"./clickylogo.PNG\";\nimport \"./Navbar.css\";\n\n// Navbar\nconst Navbar = props => (\n\n    <div id=\"navbar\" className=\"container-fluid\">\n\n        <span className=\"navItem\" id=\"navbarLeft\">\n            <img id=\"navbarLogo\" src={whitelogo} alt=\"Clicky Game Logo\" />\n        </span>\n        <span className=\"navItem\" id=\"navbarMiddle\">\n            <h1 id=\"guess\">Click a character to begin!</h1>\n        </span>\n        <span className=\"navItem\" id=\"navbarRight\">\n                <p className=\"score\">\n                    Top Score: {props.topScore}\n                </p>\n                <p className=\"score\">\n                    Score: {props.score}\n                </p>\n        </span>\n\n    </div>\n\n)\n\nexport default Navbar;","import React from \"react\";\nimport \"./Header.css\";\nimport nbalogo from \"./nbalogo.png\";\nimport warriors from \"./warriors.png\";\n\n// Header\nconst Header = props => (\n\n    <div id=\"header\" className=\"container-fluid\">\n\n        <span className=\"headerSection\" id=\"headerLeft\">\n            <img id=\"warriors\" src={warriors} alt=\"warriors\" />\n        </span>\n\n        <span className=\"headerSection\" id=\"headerMiddle\">\n            <h4 id=\"instructions\">Click on an image to earn points, but don't click on any of them more than once!</h4>\n        </span>\n\n        <span className=\"headerSection\" id=\"headerRight\">\n            <img id=\"nbalogo2\" src={nbalogo} alt=\"nbalogo\" />\n        </span>\n\n    </div>\n\n)\n\nexport default Header;","import React from \"react\";\nimport \"./Container.css\";\n\nconst Container = props => <main className=\"container\">{props.children}</main>;\n\nexport default Container;","import React from \"react\";\nimport \"./Clickables.css\";\n\nconst Clickables = props => (\n  <div className=\"characterBox\" onClick={() => props.handleClick(props.id)}>\n    <img \n          aria-label=\"click item\"\n          src={process.env.PUBLIC_URL + props.image}\n          className=\"characters\"\n          alt=\"character\"\n    />\n  </div>\n\n);\n\nexport default Clickables;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport logo from \"./warriors.png\";\n\n// Footer\nconst Footer = props => (\n\n    <div id=\"footer\" className=\"container-fluid\">\n\n        <div className=\"row justify-content-center\">\n            <div className=\"col-auto\">\n                <div className=\"footerWrapper\">\n                    <a id=\"footerContent\" href=\"https://jhwillia7.github.io/jhwillia7.github.io/\" target=\"blank\">\n                        <h4 id=\"name\">John Williams <img id=\"logo\" src={logo} alt=\"NBA Logo\" />\n                    </h4>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n)\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Container from \"./components/Container\";\nimport Clickables from \"./components/Clickables\";\nimport Footer from \"./components/Footer\";\nimport data from \"./data.json\";\n\nclass App extends Component {\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.shuffleCharacters(this.state.data) });\n  }\n\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleCharacters(resetData);\n  };\n\n  shuffleCharacters = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  correctGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = newScore > topScore ? newScore : topScore;\n    this.setState({\n      data: this.shuffleCharacters(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n\n  };\n\n  incorrectGuess = data => {\n    alert(\"INCORRECT, your final score is \" + this.state.score);\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  handleClickable = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(characters => {\n      const newItem = { ...characters };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.correctGuess(newData)\n      : this.incorrectGuess(newData);\n  };\n\n  render() {\n    return (\n      <div>\n\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n\n        <Header />\n\n        <Container>\n          {this.state.data.map(item => (\n            <Clickables\n              key={item.id}\n              id={item.id}\n              handleClick={this.handleClickable}\n              image={item.image}\n            />\n          ))}\n        </Container>\n\n        <Footer />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}